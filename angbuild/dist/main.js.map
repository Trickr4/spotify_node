{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/about/about.component.css","webpack:///./src/app/components/about/about.component.html","webpack:///./src/app/components/about/about.component.ts","webpack:///./src/app/components/carousel-card/carousel-card.component.css","webpack:///./src/app/components/carousel-card/carousel-card.component.html","webpack:///./src/app/components/carousel-card/carousel-card.component.ts","webpack:///./src/app/components/carousel/carousel.component.css","webpack:///./src/app/components/carousel/carousel.component.html","webpack:///./src/app/components/carousel/carousel.component.ts","webpack:///./src/app/components/search/search.component.css","webpack:///./src/app/components/search/search.component.html","webpack:///./src/app/components/search/search.component.ts","webpack:///./src/app/components/thermometer/thermometer.component.css","webpack:///./src/app/components/thermometer/thermometer.component.html","webpack:///./src/app/components/thermometer/thermometer.component.ts","webpack:///./src/app/components/track-list/track-list.component.css","webpack:///./src/app/components/track-list/track-list.component.html","webpack:///./src/app/components/track-list/track-list.component.ts","webpack:///./src/app/data/album-data.ts","webpack:///./src/app/data/artist-data.ts","webpack:///./src/app/data/profile-data.ts","webpack:///./src/app/data/resource-data.ts","webpack:///./src/app/data/track-data.ts","webpack:///./src/app/data/track-feature.ts","webpack:///./src/app/pages/album-page/album-page.component.css","webpack:///./src/app/pages/album-page/album-page.component.html","webpack:///./src/app/pages/album-page/album-page.component.ts","webpack:///./src/app/pages/artist-page/artist-page.component.css","webpack:///./src/app/pages/artist-page/artist-page.component.html","webpack:///./src/app/pages/artist-page/artist-page.component.ts","webpack:///./src/app/pages/home-page/home-page.component.css","webpack:///./src/app/pages/home-page/home-page.component.html","webpack:///./src/app/pages/home-page/home-page.component.ts","webpack:///./src/app/pages/track-page/track-page.component.css","webpack:///./src/app/pages/track-page/track-page.component.html","webpack:///./src/app/pages/track-page/track-page.component.ts","webpack:///./src/app/services/spotify.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ArtistPageComponent } from './pages/artist-page/artist-page.component';\nimport { TrackPageComponent } from './pages/track-page/track-page.component';\nimport { AlbumPageComponent } from './pages/album-page/album-page.component';\nimport { HomePageComponent } from './pages/home-page/home-page.component';\n\nconst routes: Routes = [\n\t{ path: 'artist/:id', component: ArtistPageComponent},\n\t{ path: 'track/:id', component: TrackPageComponent},\n\t{ path: 'album/:id', component: AlbumPageComponent},\n\t{ path: '', component: HomePageComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"nav {\\n\\tmargin-bottom: 20px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Q0FDQyxvQkFBb0I7Q0FDcEIiLCJmaWxlIjoic3JjL2FwcC9hcHAuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIm5hdiB7XG5cdG1hcmdpbi1ib3R0b206IDIwcHg7XG59Il19 */\"","module.exports = \"<nav class=\\\"navbar navbar-expand-lg sticky-top navbar-light bg-light\\\">\\n    <ul class=\\\"navbar-nav mr-auto\\\">\\n      <li class=\\\"nav-item navbar-brand\\\">\\n        <a class=\\\"navbar-brand\\\" href=\\\"/\\\">\\n          Browsing spotify\\n        </a>\\n      </li>\\n    </ul>\\n    <ul class=\\\"navbar-nav navbar-right mr-auto\\\">\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"btn btn-dark\\\" role=\\\"button\\\" href=\\\"https://spotify-backend-nettsu.herokuapp.com/login\\\">Log in</a>\\n      </li>\\n    </ul>\\n  </nav>\\n<main class=\\\"container-fluid\\\">\\n\\t<router-outlet></router-outlet>\\n</main>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n  constructor() {\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule }    from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\nimport { AppRoutingModule } from './app-routing.module';\n\n\nimport { AppComponent } from './app.component';\nimport { CarouselCardComponent } from './components/carousel-card/carousel-card.component';\nimport { ArtistPageComponent } from './pages/artist-page/artist-page.component';\nimport { AlbumPageComponent } from './pages/album-page/album-page.component';\nimport { TrackPageComponent } from './pages/track-page/track-page.component';\nimport { AboutComponent } from './components/about/about.component';\nimport { TrackListComponent } from './components/track-list/track-list.component';\nimport { CarouselComponent } from './components/carousel/carousel.component';\nimport { SearchComponent } from './components/search/search.component';\nimport { HomePageComponent } from './pages/home-page/home-page.component';\nimport { ThermometerComponent } from './components/thermometer/thermometer.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AboutComponent,\n    CarouselCardComponent,\n    ArtistPageComponent,\n    AlbumPageComponent,\n    TrackPageComponent,\n    TrackListComponent,\n    CarouselComponent,\n    SearchComponent,\n    HomePageComponent,\n    ThermometerComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    FormsModule,\n    AppRoutingModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"img {\\n\\tmax-width: 400px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9hYm91dC9hYm91dC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0NBQ0MsaUJBQWlCO0NBQ2pCIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9hYm91dC9hYm91dC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiaW1nIHtcblx0bWF4LXdpZHRoOiA0MDBweDtcbn0iXX0= */\"","module.exports = \"<!--TODO: Define click callback to load about me information-->\\n<button class=\\\"btn btn-light\\\" (click)=\\\"getAboutMe()\\\">Load info about me</button>\\n<!--TODO: replace ??? to bind to name-->\\n<h3>Logged in user: {{name}}</h3>\\n<!--TODO: bind img src's to profile_pic-->\\n<img src={{profile_pic}}>\\n<p>\\n\\t<!--TODO: bind link's href to profile_link-->\\n\\t<a href={{profile_link}} class=\\\"btn btn-light\\\" target=\\\"_blank\\\">Open profile on Spotify</a>\\t\\n</p>\"","import { Component, OnInit } from '@angular/core';\nimport {SpotifyService} from '../../services/spotify.service';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.css']\n})\nexport class AboutComponent implements OnInit {\n  name:string = null;\n  profile_pic:string = \"../../../assets/unknown.jpg\";\n  profile_link:string = null;\n\n  //TODO: inject the Spotify service\n  constructor(private spotifyService:SpotifyService) { \n   }\n  \n  ngOnInit() {\n  }\n  /*TODO: create a function which gets the \"about me\" information from Spotify when the button in the view is clicked.\n  In that function, update the name, profile_pic, and profile_link fields */\n  getAboutMe(){ \n    this.spotifyService.aboutMe().then(data => {\n      this.name = data.name;\n      this.profile_pic = data.imageURL;\n      this.profile_link = data.spotifyProfile\n    })\n  }\n  \n}\n      \n      ","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvY2Fyb3VzZWwtY2FyZC9jYXJvdXNlbC1jYXJkLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<!--TODO: bind href to the appropriate local URL for the album/artist/song.-->\\n<a [href] =\\\"resource.url\\\">\\n<!--TODO bind src with the album/artist/song image URRL-->\\n<img [src]=\\\"resource.imageURL\\\"  class=\\\"d-block w-100\\\">\\n<div class=\\\"carousel-caption d-none d-md-block\\\">\\n\\t<!--TODO: populate h5 with the album/artist/song name-->\\n\\t<h5 [textContent]=\\\"resource.name\\\">???</h5>\\n</div>\\n</a>\"","import { Component, OnInit, Input } from '@angular/core';\nimport { ResourceData } from '../../data/resource-data';\n\n@Component({\n  selector: 'app-carousel-card',\n  templateUrl: './carousel-card.component.html',\n  styleUrls: ['./carousel-card.component.css']\n})\nexport class CarouselCardComponent implements OnInit {\n  @Input() resource:ResourceData;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".carousel {\\n\\twidth: 400px;\\n}\\n\\napp-artist {\\n\\tvertical-align: middle;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9jYXJvdXNlbC9jYXJvdXNlbC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0NBQ0MsYUFBYTtDQUNiOztBQUVEO0NBQ0MsdUJBQXVCO0NBQ3ZCIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9jYXJvdXNlbC9jYXJvdXNlbC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmNhcm91c2VsIHtcblx0d2lkdGg6IDQwMHB4O1xufVxuXG5hcHAtYXJ0aXN0IHtcblx0dmVydGljYWwtYWxpZ246IG1pZGRsZTtcbn0iXX0= */\"","module.exports = \"<div *ngIf=\\\"resources\\\" id=\\\"{{carouselId}}\\\" class=\\\"carousel slide carousel-fade\\\" data-ride=\\\"carousel\\\" data-pause=\\\"false\\\" data-interval=\\\"3000\\\">\\n  <div class=\\\"carousel-inner\\\">\\n    <!--TODO: edit *ngFor to populate carousel with carousel-card components.-->\\n    <!--carousel-card can bind a single resource as an Input.-->\\n    <!--\\\"let first=first\\\" sets the \\\"first\\\" variable to be true for the first card in the carousel. The [ngClass] assigns the active property to it-->\\n    <!--https://stackoverflow.com/questions/44288434/angular-2-ngfor-first-last-index-loop-->\\n    <app-carousel-card *ngFor=\\\"let res of resources;let i = index;let first = first;\\\" class=\\\"carousel-item\\\" [resource] = \\\"res\\\" [ngClass]=\\\"{'active': first}\\\"></app-carousel-card>\\n  </div>\\n  <a class=\\\"carousel-control-prev\\\" href='#{{carouselId}}' role=\\\"button\\\" data-slide=\\\"prev\\\">\\n    <span class=\\\"carousel-control-prev-icon\\\" aria-hidden=\\\"true\\\"></span>\\n    <span class=\\\"sr-only\\\">Previous</span>\\n  </a>\\n  <a class=\\\"carousel-control-next\\\" href='#{{carouselId}}' role=\\\"button\\\" data-slide=\\\"next\\\">\\n    <span class=\\\"carousel-control-next-icon\\\" aria-hidden=\\\"true\\\"></span>\\n    <span class=\\\"sr-only\\\">Next</span>\\n  </a>\\n</div>\"","import { Component, OnInit, Input } from '@angular/core';\nimport { ResourceData } from '../../data/resource-data';\n\n@Component({\n  selector: 'app-carousel',\n  templateUrl: './carousel.component.html',\n  styleUrls: ['./carousel.component.css']\n})\nexport class CarouselComponent implements OnInit {\n\t@Input() carouselId:string;\n\t@Input() resources:ResourceData[];\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"input {\\n\\tmargin: 10px;\\n}\\n\\nselect {\\n\\tmargin: 10px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9zZWFyY2gvc2VhcmNoLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Q0FDQyxhQUFhO0NBQ2I7O0FBRUQ7Q0FDQyxhQUFhO0NBQ2IiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL3NlYXJjaC9zZWFyY2guY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbImlucHV0IHtcblx0bWFyZ2luOiAxMHB4O1xufVxuXG5zZWxlY3Qge1xuXHRtYXJnaW46IDEwcHg7XG59Il19 */\"","module.exports = \"<h1>Search Spotify</h1>\\n<!--TODO: bind input's model to searchString-->\\n<input type=\\\"text\\\" [(ngModel)]=\\\"searchString\\\">\\n<!--TODO: bind select's model to searchCategory-->\\n<select [(ngModel)]=\\\"searchCategory\\\">\\n\\t<option *ngFor=\\\"let cate of searchCategories;let i = index;\\\" [ngValue]=\\\"cate\\\">{{searchCategories[i]}}</option>\\n\\t<!--TODO: loop over searchCategories to create dropdown options-->\\n\\t<!--populate body and text value https://www.w3schools.com/tags/att_option_selected.asp-->\\n</select>\\n<!--TODO: Call search function when the button is clicked-->\\n<button class=\\\"btn btn-light\\\" (click)=\\\"search()\\\">Search</button>\\n<!--TODO: Display a carousel component if searching for an artist or album. Bind carousel's resources and give it a static carouselId.-->\\n<app-carousel *ngIf = \\\"searchCategory == 'album' || searchCategory == 'artist'\\\" [resources] = \\\"resources\\\" [carouselId] = \\\"'myCarousel'\\\"></app-carousel>\\n\\n<!--TODO: Display a track-list component if searching for a track. Bind track-list's tracks.-->\\n<app-track-list *ngIf = \\\"searchCategory == 'track'\\\" [tracks] = \\\"resources\\\"></app-track-list>\"","import { Component, OnInit } from '@angular/core';\nimport { SpotifyService } from '../../services/spotify.service';\nimport { ArtistData } from '../../data/artist-data';\nimport { AlbumData } from '../../data/album-data';\nimport { TrackData } from '../../data/track-data';\nimport { ResourceData } from '../../data/resource-data';\n\n@Component({\n  selector: 'app-search',\n  templateUrl: './search.component.html',\n  styleUrls: ['./search.component.css'],\n  providers: [ SpotifyService ]\n})\nexport class SearchComponent implements OnInit {\n  searchString:string;\n  searchCategory:string = 'track';\n  searchCategories:string[] = ['artist', 'album', 'track'];\n  resources:ResourceData[];\n\n  constructor(private spotifyService:SpotifyService) { }\n\n  ngOnInit() {\n  }\n\n  search() {\n    //TODO: call search function in spotifyService and parse response\n    this.spotifyService.searchFor(this.searchCategory, this.searchString).then(data => {\n      this.resources = data;\n    });\n    \n  }\n\n}\n","module.exports = \".progress {\\n\\tmargin: 10px;\\n\\theight: 20px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy90aGVybW9tZXRlci90aGVybW9tZXRlci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0NBQ0MsYUFBYTtDQUNiLGFBQWE7Q0FDYiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvdGhlcm1vbWV0ZXIvdGhlcm1vbWV0ZXIuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5wcm9ncmVzcyB7XG5cdG1hcmdpbjogMTBweDtcblx0aGVpZ2h0OiAyMHB4O1xufSJdfQ== */\"","module.exports = \"<div class=\\\"progress\\\">\\n  <!--TODO: set style.background-color based on the audio feature's color and style.width via the audio feature's percent. Display feature name and percent.-->\\n  <div class=\\\"progress-bar\\\"  role=\\\"progressbar\\\" [style.background-color]= \\\"Tfeature.color\\\" [style.width] =\\\"Tfeature.percentageString\\\" aria-valuemin=\\\"0\\\" aria-valuemax=\\\"100\\\">{{Tfeature.name}}: {{Tfeature.percentageString}}</div>\\n</div>\"","import { Component, Input, OnInit } from '@angular/core';\nimport { TrackFeature } from '../../data/track-feature';\n\n@Component({\n  selector: 'app-thermometer',\n  templateUrl: './thermometer.component.html',\n  styleUrls: ['./thermometer.component.css']\n})\nexport class ThermometerComponent implements OnInit {\n  //TODO: define Input fields and bind them to the template.\n  @Input() Tfeature:TrackFeature;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"table {\\n\\tcolor: var(--dark);\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy90cmFjay1saXN0L3RyYWNrLWxpc3QuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtDQUNDLG1CQUFtQjtDQUNuQiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvdHJhY2stbGlzdC90cmFjay1saXN0LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJ0YWJsZSB7XG5cdGNvbG9yOiB2YXIoLS1kYXJrKTtcbn0iXX0= */\"","module.exports = \"<table class=\\\"table table-sm table-light table-striped\\\" *ngIf=\\\"tracks\\\">\\n\\t<thead>\\n\\t\\t<tr>\\n\\t\\t\\t<th scope=\\\"col\\\">#</th>\\n\\t\\t\\t<th scope=\\\"col\\\">Track</th>\\n\\t\\t\\t<th scope=\\\"col\\\">Duration</th>\\n\\t\\t\\t<!--TODO: Use *ngIf to hide if hideArtist is true-->\\n\\t\\t\\t<th *ngIf = \\\"!hideArtist\\\" scope=\\\"col\\\" >Primary Artist</th>\\n\\t\\t\\t<!--TODO: Use *ngIf to hide if hideAlbum is true-->\\n\\t\\t\\t<th scope=\\\"col\\\" *ngIf = \\\"!hideAlbum\\\">Album</th>\\n\\t\\t</tr>\\n\\t</thead>\\n\\t<tbody>\\n\\t\\t<!--TODO: Use *ngFor to loop over tracks-->\\n\\t\\t<tr *ngFor=\\\"let track of tracks;let i = index;let isFirst = first;\\\">\\n\\t\\t\\t<!--TODO: Populate with row index (start with 1!)-->\\n\\t\\t\\t<td [textContent]=\\\"i\\\">???</td>\\n\\t\\t\\t<td>\\n\\t\\t\\t\\t<!--TODO: link to the endpoint for that track, display the track's name-->\\n\\t\\t\\t\\t<a [href] =\\\"track.url\\\" [textContent]=\\\"track.name\\\">???</a>\\n\\t\\t\\t</td>\\n\\t\\t\\t<!--TODO: display the track's duration-->\\n\\t\\t\\t<td [textContent]=\\\"track.durationStr\\\">???</td>\\n\\t\\t\\t<!--TODO: Use *ngIf to hide if hideArtist is true; link to the first artist's endpoint and display the first artist's name-->\\n\\t\\t\\t<td *ngIf = \\\"!hideArtist\\\"><a [href] =\\\"track.artists[0].url\\\" [textContent]=\\\"track.artists[0].name\\\"></a></td>\\n\\t\\t\\t<!--TODO: Use *ngIf to hide if hideAlbum is true; link to the album's endpoint and display the album's name-->\\n\\t\\t\\t<td *ngIf = \\\"!hideAlbum\\\"><a [href] =\\\"track.album.url\\\" [textContent]=\\\"track.album.name\\\"></a></td>\\n\\t\\t</tr>\\n\\t</tbody>\\n</table>\\n\"","import { Component, OnInit, Input } from '@angular/core';\nimport { TrackData } from '../../data/track-data';\n\n@Component({\n  selector: 'app-track-list',\n  templateUrl: './track-list.component.html',\n  styleUrls: ['./track-list.component.css']\n})\nexport class TrackListComponent implements OnInit {\n\t@Input() tracks:TrackData[];\n\t@Input() hideArtist:boolean = false;\n\t@Input() hideAlbum:boolean = false;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { ResourceData } from './resource-data';\nimport { ArtistData } from './artist-data';\n\nexport class AlbumData extends ResourceData {\n\tgenres:string[];\n\tartists:ArtistData[];\n\n\tconstructor(objectModel:{}) {\n\t\tsuper(objectModel);\n\t\tthis.category=\"album\";\n\n\t\tthis.genres = objectModel['genres'];\n\n\t\tthis.artists = objectModel['artists'].map((artist) => {\n\t\t\treturn new ArtistData(artist);\n\t\t});\n\t}\n}\n","import { ResourceData } from './resource-data';\n\nexport class ArtistData extends ResourceData {\n\tgenres:string[];\n\n\tconstructor(objectModel:{}) {\n\t\tsuper(objectModel);\n\t\tthis.category = 'artist';\n\t\tthis.genres = objectModel['genres'];\n\t}\n}\n","export class ProfileData {\n\tname:string;\n\tspotifyProfile:string;\n\timageURL:string;\n\n\tconstructor(objectModel:{}) {\n\t\tthis.name = objectModel['display_name'];\n\t\tthis.spotifyProfile = objectModel['external_urls']['spotify'];\n\t\tif(objectModel['images'].length > 0) {\n\t\t\tthis.imageURL = objectModel['images'][0].url;\n\t\t} else {\n\t\t\tthis.imageURL = '../../assets/unknown.jpg';\n\t\t}\n\t}\n}\n","export abstract class ResourceData {\n\tcategory:string = \"unknown\";\n\tname:string;\n\timageURL:string;\n\tid:string;\n\turl:string;\n\n\tconstructor(objectModel:{}) {\n\t\tthis.name = objectModel['name'];\n\t\tthis.id = objectModel['id'];\n\t\tif(objectModel['images'] && objectModel['images'].length > 0) {\n\t\t\tthis.imageURL = objectModel['images'][0].url;\n\t\t} else if(objectModel['album'] && objectModel['album']['images'] && objectModel['album']['images'].length > 0) {\n\t\t\tthis.imageURL = objectModel['album']['images'][0].url;\n\t\t} else {\n\t\t\tthis.imageURL = '../../assets/unknown.jpg';\n\t\t}\n\n\t\tif('spotify' in objectModel['external_urls']) {\n\t\t\tthis.url = objectModel['external_urls']['spotify'];\n\t\t}\n\t}\n}\n","import { ResourceData } from './resource-data';\nimport { ArtistData } from './artist-data';\nimport { AlbumData } from './album-data';\n\nexport class TrackData extends ResourceData {\n\talbum:AlbumData;\n\tartists:ArtistData[];\n\tduration_ms:number;\n\n\tconstructor(objectModel:{}) {\n\t\tsuper(objectModel);\n\t\tthis.category = \"track\";\n\n\t\tthis.artists = objectModel['artists'].map((artist) => {\n\t\t\treturn new ArtistData(artist);\n\t\t});\n\n\t\tif(objectModel['album']) {\n\t\t\tthis.album = new AlbumData(objectModel['album']);\n\t\t}\n\n\t\tthis.duration_ms = objectModel['duration_ms'];\n\t}\n\n\t//Return duration_ms in X:XX form (and drop ms component)\n\tget durationStr() {\n\t\tvar minutes:number = this.duration_ms / 60000; //60 sec/min * 100ms/sec\n\t\tvar seconds:number = (this.duration_ms) / 1000 % 60; // 100ms/sec, get remainder\n\t\treturn minutes.toFixed(0) + ':' + seconds.toFixed(0).padStart(2, '0');\n\t}\n\n\tget primaryArtist() {\n\t\treturn this.artists[0];\n\t}\n}\n","import * as chroma from 'chroma-js';\n\nexport class TrackFeature {\n\tstatic FeatureTypes = ['danceability', 'energy', 'speechiness', 'acousticness', 'instrumentalness', 'liveness', 'valence'];\n\n\tid:string;\n\tname:string;\n\tpercent:number;\n\n\tconstructor(feature:string, percent:number) {\n\t\tthis.name = feature;\n\t\tthis.percent = percent;\n\t}\n\n\tget percentageString() {\n\t\treturn (this.percent*100).toFixed() + '%';\n\t}\n\n\tget color() {\n\t\treturn chroma.mix('red', 'green', this.percent, 'hsl').hex();\n\t}\n}\n","module.exports = \"#albumImg {\\n\\tmax-width: 100%;\\n\\tmax-height: 100%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvYWxidW0tcGFnZS9hbGJ1bS1wYWdlLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Q0FDQyxnQkFBZ0I7Q0FDaEIsaUJBQWlCO0NBQ2pCIiwiZmlsZSI6InNyYy9hcHAvcGFnZXMvYWxidW0tcGFnZS9hbGJ1bS1wYWdlLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIjYWxidW1JbWcge1xuXHRtYXgtd2lkdGg6IDEwMCU7XG5cdG1heC1oZWlnaHQ6IDEwMCU7XG59Il19 */\"","module.exports = \"<div *ngIf=\\\"album\\\" class=\\\"row\\\">\\n\\t<div class=\\\"col-6\\\">\\n\\t\\t<!--TODO: populate with album name-->\\n\\t\\t<h1>{{album.name}}</h1>\\n\\t\\t<!--TODO: set src to album image URL-->\\n\\t\\t<img id=\\\"albumImg\\\" src={{album.imageURL}}>\\n\\t\\t<!--TODO: loop over album artists-->\\n\\t\\t<p>\\n\\t\\t\\t<!--TODO: link to artist page, display artist name-->\\n\\t\\t\\tArtist: <a *ngFor=\\\"let artists of album.artists;\\\" href={{artists.url}}>{{artists.name}}</a>\\n\\t\\t</p>\\n\\t\\t<p>\\n\\t\\t\\t<!--TODO: link to artist page on spotify, display artist name-->\\n\\t\\t\\t<a class=\\\"btn btn-light\\\" role=\\\"button\\\" target=\\\"_blank\\\" href=\\\"https://open.spotify.com{{album.url}}\\\">Open {{album.name}} on Spotify</a>\\n\\t\\t</p>\\n\\t</div>\\n\\t<div class=\\\"col-6\\\">\\n\\t\\t<h3>Album Tracks</h3>\\n\\t\\t<!--TODO: display the track list for the album. Hide the artist and album columns because they are redundant on this page.-->\\n\\t\\t<app-track-list [tracks] = \\\"tracks\\\"></app-track-list>\\n\\t</div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { ArtistData } from '../../data/artist-data';\nimport { TrackData } from '../../data/track-data';\nimport { AlbumData } from '../../data/album-data';\nimport { SpotifyService } from '../../services/spotify.service';\n\n@Component({\n  selector: 'app-album-page',\n  templateUrl: './album-page.component.html',\n  styleUrls: ['./album-page.component.css']\n})\nexport class AlbumPageComponent implements OnInit {\n\talbumId:string;\n\talbum:AlbumData;\n\ttracks:TrackData[];\n\n\n  constructor(private route: ActivatedRoute, private spotifyService:SpotifyService) { }\n\n  ngOnInit() {\n  \tthis.albumId = this.route.snapshot.paramMap.get('id');\n    //TODO: inject spotifyService and use it to get the album data and the tracks for the album\n    \n    this.spotifyService.getAlbum(this.albumId).then(data => {\n      this.albumId = data.id;\n      data.artists[0].url = data.artists[0].url.replace(\"https://open.spotify.com\", \"\");\n      this.album = data;\n    });\n    this.spotifyService.getTracksForAlbum(this.albumId).then(data => {\n      data.forEach((item) => {\n        item.album = this.album;\n        });\n      this.tracks = data;\n    });\n  }\n\n}\n","module.exports = \"#artistImg {\\n\\tmax-width: 100%;\\n\\tmax-height: 100%;\\n}\\n\\napp-artist {\\n\\tvertical-align: middle;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvYXJ0aXN0LXBhZ2UvYXJ0aXN0LXBhZ2UuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtDQUNDLGdCQUFnQjtDQUNoQixpQkFBaUI7Q0FDakI7O0FBRUQ7Q0FDQyx1QkFBdUI7Q0FDdkIiLCJmaWxlIjoic3JjL2FwcC9wYWdlcy9hcnRpc3QtcGFnZS9hcnRpc3QtcGFnZS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiI2FydGlzdEltZyB7XG5cdG1heC13aWR0aDogMTAwJTtcblx0bWF4LWhlaWdodDogMTAwJTtcbn1cblxuYXBwLWFydGlzdCB7XG5cdHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XG59Il19 */\"","module.exports = \"<div *ngIf=\\\"artist\\\" class=\\\"row\\\">\\n\\t<div class=\\\"col-6\\\">\\n\\t\\t<!--TODO: populate with artist name-->\\n\\t\\t<h1>{{artist.name}}</h1>\\n\\t\\t<!--TODO: populate with artist image URL-->\\n\\t\\t<img id=\\\"artistImg\\\" src={{artist.imageURL}}>\\n\\t\\t<p>\\n\\t\\t\\t<!--TODO: link to artist page on spotify, display artist name-->\\n\\t\\t\\t<a class=\\\"btn btn-light\\\" role=\\\"button\\\" href={{artist.url}} target=\\\"_blank\\\">Open {{artist.name}} on Spotify</a>\\n\\t\\t</p>\\n\\t</div>\\n\\t<div class=\\\"col-2\\\">\\n\\t\\t<h3>Genres</h3>\\n\\t\\t<ul>\\n\\t\\t\\t<!--TODO: loop over artist's genres and display them-->\\n\\t\\t\\t<li *ngFor=\\\"let genre of artist.genres;\\\">{{genre}}</li>\\n\\t\\t</ul>\\n\\t\\t<p>\\n\\t\\t</p>\\n\\t</div>\\n\\t<div class=\\\"col-4\\\">\\n\\t\\t<!--TODO: display artist name-->\\n\\t\\t<h3>{{artist.name}}'s Top Tracks</h3>\\n\\t\\t<!--TODO: display the track list for the album-->\\n\\t\\t<app-track-list [tracks] = \\\"topTracks\\\"></app-track-list>\\n\\t</div>\\n</div>\\n\\n<div *ngIf=\\\"artist\\\" class=\\\"row\\\">\\n\\t<div class=\\\"col-6\\\">\\n\\t\\t<!--TODO: display artist name-->\\n\\t\\t<h3>{{artist.name}}'s Albums</h3>\\n\\t\\t<!--TODO: Display a carousel component for the artist's albums. Bind carousel's resources and give it a static carouselId.-->\\n\\t\\t<app-carousel [resources] = \\\"albums\\\" [carouselId] = \\\"'wq'\\\"></app-carousel>\\n\\t</div>\\n\\t<div class=\\\"col-6\\\">\\n\\t\\t<h3>Similar Artists</h3>\\n\\t\\t<!--TODO: Display a carousel component for similar artists. Bind carousel's resources and give it a static carouselId.-->\\n\\t\\t<app-carousel [resources] = \\\"relatedArtists\\\" [carouselId] = \\\"'vx'\\\"></app-carousel>\\n\\t</div>\\n\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { ArtistData } from '../../data/artist-data';\nimport { TrackData } from '../../data/track-data';\nimport { AlbumData } from '../../data/album-data';\nimport { SpotifyService } from '../../services/spotify.service';\n\n\n@Component({\n  selector: 'app-artist-page',\n  templateUrl: './artist-page.component.html',\n  styleUrls: ['./artist-page.component.css']\n})\nexport class ArtistPageComponent implements OnInit {\n\tartistId:string;\n\tartist:ArtistData;\n\trelatedArtists:ArtistData[];\n\ttopTracks:TrackData[];\n\talbums:AlbumData[];\n\n  constructor(private route: ActivatedRoute,private spotifyService:SpotifyService) { }\n\n  ngOnInit() {\n  \tthis.artistId = this.route.snapshot.paramMap.get('id');\n    //TODO: Inject the spotifyService and use it to get the artist data, related artists, top tracks for the artist, and the artist's albums\n    this.spotifyService.getArtist(this.artistId).then(data => {\n      this.artistId = data.id;\n      this.artist = data;\n    });\n    this.spotifyService.getRelatedArtists(this.artistId).then(data => {\n      this.relatedArtists = data;\n    });\n    this.spotifyService.getAlbumsForArtist(this.artistId).then(data => {\n      this.albums = data;\n    });\n    this.spotifyService.getTopTracksForArtist(this.artistId).then(data => {\n      this.topTracks = data;\n    });\n  }\n\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2hvbWUtcGFnZS9ob21lLXBhZ2UuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"row\\\">\\n\\t<app-about class=\\\"col-6\\\"></app-about>\\n\\t<app-search class=\\\"col-6\\\"></app-search>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home-page',\n  templateUrl: './home-page.component.html',\n  styleUrls: ['./home-page.component.css']\n})\nexport class HomePageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3RyYWNrLXBhZ2UvdHJhY2stcGFnZS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"row\\\">\\n\\t<div *ngIf=\\\"track\\\" class=\\\"col-6\\\">\\n\\t\\t<!--TODO: populate with track name-->\\n\\t\\t<h1>{{track.name}}</h1>\\n\\t\\t<p>\\n\\t\\t\\t<!--TODO: link to album page, display album name-->\\n\\t\\t\\tTrack on <a href={{track.album.url}}>{{track.album.name}}</a>\\n\\t\\t</p>\\n\\t\\t<div>\\n\\t\\t\\t<!--TODO: loop over album's artists-->\\n\\t\\t\\t<p>\\n\\t\\t\\t\\t<!--TODO: link to artist page, display artist name-->\\n\\t\\t\\t\\tArtist: <a href={{track.artists[0].url}}>{{track.artists[0].name}}</a>\\n\\t\\t\\t</p>\\n\\t\\t</div>\\n\\t\\t<p>\\n\\t\\t\\t<!--TODO: populate with track duration-->\\n\\t\\t\\tDuration: {{track.durationStr}}\\n\\t\\t</p>\\n\\t\\t<p>\\n\\t\\t\\t<!--TODO: link to track page on spotify, display track name-->\\n\\t\\t\\t<a class=\\\"btn btn-light\\\" role=\\\"button\\\" target=\\\"_blank\\\" href={{track.url}}>Open {{track.name}} on Spotify</a>\\n\\t\\t</p>\\n\\t</div>\\n\\t<div *ngIf=\\\"audioFeatures\\\" class=\\\"col-6\\\">\\n\\t\\t<!--TODO: loop over types of features and create a thermometer component for each-->\\n\\t\\t<app-thermometer *ngFor=\\\"let feat of audioFeatures;let i = index;\\\" [Tfeature] = \\\"feat\\\"></app-thermometer>\\n\\t</div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { ArtistData } from '../../data/artist-data';\nimport { TrackData } from '../../data/track-data';\nimport { AlbumData } from '../../data/album-data';\nimport { TrackFeature } from '../../data/track-feature';\nimport { SpotifyService } from '../../services/spotify.service';\n\n@Component({\n  selector: 'app-track-page',\n  templateUrl: './track-page.component.html',\n  styleUrls: ['./track-page.component.css']\n})\nexport class TrackPageComponent implements OnInit {\n\ttrackId:string;\n\ttrack:TrackData;\n  audioFeatures:TrackFeature[];\n\n  constructor(private route: ActivatedRoute, private spotifyService:SpotifyService) { }\n\n  ngOnInit() {\n  \tthis.trackId = this.route.snapshot.paramMap.get('id');\n    //TODO: Inject the spotifyService and use it to get the track data and it's audio features\n    this.spotifyService.getTrack(this.trackId).then(data => {\n      this.trackId = data.id;\n      data.artists[0].url = data.artists[0].url.replace(\"https://open.spotify.com\", \"\");\n      data.album.url = data.album.url.replace(\"https://open.spotify.com\", \"\");\n      this.track = data;\n    });\n    this.spotifyService.getAudioFeaturesForTrack(this.trackId).then(data => {\n      this.audioFeatures = data;\n    });\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { ArtistData } from '../data/artist-data';\nimport { AlbumData } from '../data/album-data';\nimport { TrackData } from '../data/track-data';\nimport { ResourceData } from '../data/resource-data';\nimport { ProfileData } from '../data/profile-data';\nimport { TrackFeature } from '../data/track-feature';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SpotifyService {\n\texpressBaseUrl:string = '';\n\n  constructor(private http:HttpClient) { }\n\n  private sendRequestToExpress(endpoint:string):Promise<any> {\n    //TODO: use the injected http Service to make a get request to the Express endpoint and return the response.\n    //the http service works similarly to fetch(). It may be useful to call .toPromise() on any responses.\n    //update the return to instead return a Promise with the data from the Express server\n    let promise = new Promise((resolve,reject) => {\n      let url = this.expressBaseUrl+endpoint;\n      this.http.get(url)\n        .toPromise()\n        .then(\n          res => { \n            resolve(res);\n          }\n        )\n    } );\n    \n    return promise;\n  }\n\n  aboutMe():Promise<ProfileData> {\n    //This line is sending a request to express, which returns a promise with some data. We're then parsing the data \n    return this.sendRequestToExpress('/me').then((data) => {\n      return new ProfileData(data);\n    });\n  }\n  \n  searchFor(category:string, resource:string):Promise<ResourceData[]> {\n    //TODO: identify the search endpoint in the express webserver (routes/index.js) and send the request to express.\n    //Make sure you're encoding the resource with encodeURIComponent().\n    //Depending on the category (artist, track, album), return an array of that type of data.\n    //JavaScript's \"map\" function might be useful for this, but there are other ways of building the array.\n    if (category == 'album')\n    return this.sendRequestToExpress('/search/'+category+'/'+resource).then((data) => {\n      let URI = encodeURIComponent(data);\n      let resources = new Array();\n      data['albums']['items'].forEach((item) => {\n      let Album = new AlbumData(item);\n      Album.url = Album.url.replace(\"https://open.spotify.com\", \"\")\n      resources.push(Album);\n      });\n      return resources;\n    });\n    if (category == 'artist')\n    return this.sendRequestToExpress('/search/'+category+'/'+resource).then((data) => {\n      let URI = encodeURIComponent(data);\n      let resources = new Array();\n      data['artists']['items'].forEach((item) => {\n      let Artist = new ArtistData(item);\n      Artist.url = Artist.url.replace(\"https://open.spotify.com\", \"\")\n      resources.push(Artist);\n      });\n      return resources;\n    });\n    if (category == 'track')\n    return this.sendRequestToExpress('/search/'+category+'/'+resource).then((data) => {\n      let URI = encodeURIComponent(data);\n      let resources = new Array();\n      data['tracks']['items'].forEach((item) => {\n      let Track = new TrackData(item);\n      Track.url = Track.url.replace(\"https://open.spotify.com\", \"\");\n      Track.album.url = Track.album.url.replace(\"https://open.spotify.com\", \"\");\n      Track.artists[0].url = Track.artists[0].url.replace(\"https://open.spotify.com\", \"\");\n      resources.push(Track);\n      });\n      return resources;\n    });\n  }\n  \n  getArtist(artistId:string):Promise<ArtistData> {\n    //TODO: use the artist endpoint to make a request to express.\n    //Again, you may need to encode the artistId.\n    return this.sendRequestToExpress('/artist/'+artistId).then((data) => {\n      let art = new ArtistData(data);\n      return art;\n    });\n  }\n\n  getRelatedArtists(artistId:string):Promise<ArtistData[]> {\n    //TODO: use the related artist endpoint to make a request to express and return an array of artist data.\n    return this.sendRequestToExpress('/artist-related-artists/'+artistId).then((data) => {\n      let resources = new Array();\n      data['artists'].forEach((item) => {\n      let Artist = new ArtistData(item);\n      Artist.url = Artist.url.replace(\"https://open.spotify.com\", \"\");\n      resources.push(Artist);\n      });\n      return resources;\n    });\n    \n  }\n\n  getTopTracksForArtist(artistId:string):Promise<TrackData[]> {\n    //TODO: use the top tracks endpoint to make a request to express.\n    return this.sendRequestToExpress('/artist-top-tracks/'+artistId).then((data) => {\n      let resources = new Array();\n      data['tracks'].forEach((item) => {\n      let Track = new TrackData(item);\n      Track.album.url = Track.album.url.replace(\"https://open.spotify.com\", \"\");\n      Track.artists[0].url = Track.artists[0].url.replace(\"https://open.spotify.com\", \"\");\n      Track.url = Track.url.replace(\"https://open.spotify.com\", \"\");\n      resources.push(Track);\n      });\n      return resources;\n    });\n  }\n\n  getAlbumsForArtist(artistId:string):Promise<AlbumData[]> {\n    //TODO: use the albums for an artist endpoint to make a request to express.\n    return this.sendRequestToExpress('/artist-albums/'+artistId).then((data) => {\n      let resources = new Array();\n      data['items'].forEach((item) => {\n      let Album = new AlbumData(item);\n      Album.url = Album.url.replace(\"https://open.spotify.com\", \"\");\n      resources.push(Album);\n      });\n      return resources;\n    });\n  }\n\n  getAlbum(albumId:string):Promise<AlbumData> {\n    //TODO: use the album endpoint to make a request to express.\n    return this.sendRequestToExpress('/album/'+albumId).then((data) => {\n      let Album = new AlbumData(data);\n      Album.artists[0].url = Album.artists[0].url.replace(\"https://open.spotify.com\", \"\");\n      Album.url = Album.url.replace(\"https://open.spotify.com\", \"\");\n      return Album;\n    });\n  }\n\n  getTracksForAlbum(albumId:string):Promise<TrackData[]> {\n    //TODO: use the tracks for album endpoint to make a request to express.\n    return this.sendRequestToExpress('/album-tracks/'+albumId).then((data) => {\n      let resources = new Array();\n      data['items'].forEach((item) => {\n      let Track = new TrackData(item);\n      Track.artists[0].url = Track.artists[0].url.replace(\"https://open.spotify.com\", \"\");\n      Track.url = Track.url.replace(\"https://open.spotify.com\", \"\");\n      resources.push(Track);\n      });\n      return resources;\n    });\n  }\n\n  getTrack(trackId:string):Promise<TrackData> {\n    //TODO: use the track endpoint to make a request to express.\n    return this.sendRequestToExpress('/track/'+trackId).then((data) => {\n      let Track = new TrackData(data);\n      return Track;\n    });\n  }\n\n  getAudioFeaturesForTrack(trackId:string):Promise<TrackFeature[]> {\n    //TODO: use the audio features for track endpoint to make a request to express.\n    return this.sendRequestToExpress('/track-audio-features/'+trackId).then((data) => {\n      let resources = new Array();\n      let danceability = new TrackFeature('danceability',data.danceability);\n      danceability.id = data.id;\n      resources.push(danceability);\n\n      let energy = new TrackFeature('energy',data.energy);\n      energy.id = data.id;\n      resources.push(energy);\n      \n      let speechiness = new TrackFeature('speechiness',data.speechiness);\n      speechiness.id = data.id;\n      resources.push(speechiness);\n\n      let acousticness = new TrackFeature('acousticness',data.acousticness);\n      acousticness.id = data.id;\n      resources.push(acousticness);\n\n      let instrumentalness = new TrackFeature('instrumentalness',data.instrumentalness);\n      instrumentalness.id = data.id;\n      resources.push(instrumentalness);\n\n      let liveness = new TrackFeature('liveness',data.liveness);\n      liveness.id = data.id;\n      resources.push(liveness);\n\n      let valence = new TrackFeature('valence',data.valence);\n      valence.id = data.id;\n      resources.push(valence);\n      return resources;\n    });\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}