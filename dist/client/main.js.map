{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/about/about.component.css","webpack:///./src/app/components/about/about.component.html","webpack:///./src/app/components/about/about.component.ts","webpack:///./src/app/components/carousel-card/carousel-card.component.css","webpack:///./src/app/components/carousel-card/carousel-card.component.html","webpack:///./src/app/components/carousel-card/carousel-card.component.ts","webpack:///./src/app/components/carousel/carousel.component.css","webpack:///./src/app/components/carousel/carousel.component.html","webpack:///./src/app/components/carousel/carousel.component.ts","webpack:///./src/app/components/search/search.component.css","webpack:///./src/app/components/search/search.component.html","webpack:///./src/app/components/search/search.component.ts","webpack:///./src/app/components/thermometer/thermometer.component.css","webpack:///./src/app/components/thermometer/thermometer.component.html","webpack:///./src/app/components/thermometer/thermometer.component.ts","webpack:///./src/app/components/track-list/track-list.component.css","webpack:///./src/app/components/track-list/track-list.component.html","webpack:///./src/app/components/track-list/track-list.component.ts","webpack:///./src/app/data/album-data.ts","webpack:///./src/app/data/artist-data.ts","webpack:///./src/app/data/profile-data.ts","webpack:///./src/app/data/resource-data.ts","webpack:///./src/app/data/track-data.ts","webpack:///./src/app/data/track-feature.ts","webpack:///./src/app/pages/album-page/album-page.component.css","webpack:///./src/app/pages/album-page/album-page.component.html","webpack:///./src/app/pages/album-page/album-page.component.ts","webpack:///./src/app/pages/artist-page/artist-page.component.css","webpack:///./src/app/pages/artist-page/artist-page.component.html","webpack:///./src/app/pages/artist-page/artist-page.component.ts","webpack:///./src/app/pages/home-page/home-page.component.css","webpack:///./src/app/pages/home-page/home-page.component.html","webpack:///./src/app/pages/home-page/home-page.component.ts","webpack:///./src/app/pages/track-page/track-page.component.css","webpack:///./src/app/pages/track-page/track-page.component.html","webpack:///./src/app/pages/track-page/track-page.component.ts","webpack:///./src/app/services/spotify.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ArtistPageComponent } from './pages/artist-page/artist-page.component';\r\nimport { TrackPageComponent } from './pages/track-page/track-page.component';\r\nimport { AlbumPageComponent } from './pages/album-page/album-page.component';\r\nimport { HomePageComponent } from './pages/home-page/home-page.component';\r\n\r\nconst routes: Routes = [\r\n\t{ path: 'artist/:id', component: ArtistPageComponent},\r\n\t{ path: 'track/:id', component: TrackPageComponent},\r\n\t{ path: 'album/:id', component: AlbumPageComponent},\r\n\t{ path: '', component: HomePageComponent}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","module.exports = \"nav {\\r\\n\\tmargin-bottom: 20px;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Q0FDQyxvQkFBb0I7Q0FDcEIiLCJmaWxlIjoic3JjL2FwcC9hcHAuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIm5hdiB7XHJcblx0bWFyZ2luLWJvdHRvbTogMjBweDtcclxufSJdfQ== */\"","module.exports = \"<nav class=\\\"navbar navbar-expand-lg sticky-top navbar-light bg-light\\\">\\r\\n    <ul class=\\\"navbar-nav mr-auto\\\">\\r\\n      <li class=\\\"nav-item navbar-brand\\\">\\r\\n        <a class=\\\"navbar-brand\\\" href=\\\"/\\\">\\r\\n          Browsing spotify\\r\\n        </a>\\r\\n      </li>\\r\\n    </ul>\\r\\n    <ul class=\\\"navbar-nav navbar-right mr-auto\\\">\\r\\n      <li class=\\\"nav-item\\\">\\r\\n        <a class=\\\"btn btn-dark\\\" role=\\\"button\\\" href=\\\"http://localhost:8888/login\\\">Log in</a>\\r\\n      </li>\\r\\n    </ul>\\r\\n  </nav>\\r\\n<main class=\\\"container-fluid\\\">\\r\\n\\t<router-outlet></router-outlet>\\r\\n</main>\\r\\n\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n\r\n  constructor() {\r\n  }\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { HttpClientModule }    from '@angular/common/http';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { AppRoutingModule } from './app-routing.module';\r\n\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { CarouselCardComponent } from './components/carousel-card/carousel-card.component';\r\nimport { ArtistPageComponent } from './pages/artist-page/artist-page.component';\r\nimport { AlbumPageComponent } from './pages/album-page/album-page.component';\r\nimport { TrackPageComponent } from './pages/track-page/track-page.component';\r\nimport { AboutComponent } from './components/about/about.component';\r\nimport { TrackListComponent } from './components/track-list/track-list.component';\r\nimport { CarouselComponent } from './components/carousel/carousel.component';\r\nimport { SearchComponent } from './components/search/search.component';\r\nimport { HomePageComponent } from './pages/home-page/home-page.component';\r\nimport { ThermometerComponent } from './components/thermometer/thermometer.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    AboutComponent,\r\n    CarouselCardComponent,\r\n    ArtistPageComponent,\r\n    AlbumPageComponent,\r\n    TrackPageComponent,\r\n    TrackListComponent,\r\n    CarouselComponent,\r\n    SearchComponent,\r\n    HomePageComponent,\r\n    ThermometerComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    AppRoutingModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"img {\\r\\n\\tmax-width: 400px;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9hYm91dC9hYm91dC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0NBQ0MsaUJBQWlCO0NBQ2pCIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9hYm91dC9hYm91dC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiaW1nIHtcclxuXHRtYXgtd2lkdGg6IDQwMHB4O1xyXG59Il19 */\"","module.exports = \"<!--TODO: Define click callback to load about me information-->\\r\\n<button class=\\\"btn btn-light\\\" (click)=\\\"getAboutMe()\\\">Load info about me</button>\\r\\n<!--TODO: replace ??? to bind to name-->\\r\\n<h3>Logged in user: {{name}}</h3>\\r\\n<!--TODO: bind img src's to profile_pic-->\\r\\n<img src={{profile_pic}}>\\r\\n<p>\\r\\n\\t<!--TODO: bind link's href to profile_link-->\\r\\n\\t<a href={{profile_link}} class=\\\"btn btn-light\\\" target=\\\"_blank\\\">Open profile on Spotify</a>\\t\\r\\n</p>\"","import { Component, OnInit } from '@angular/core';\r\nimport {SpotifyService} from '../../services/spotify.service';\r\n\r\n@Component({\r\n  selector: 'app-about',\r\n  templateUrl: './about.component.html',\r\n  styleUrls: ['./about.component.css']\r\n})\r\nexport class AboutComponent implements OnInit {\r\n  name:string = null;\r\n  profile_pic:string = \"../../../assets/unknown.jpg\";\r\n  profile_link:string = null;\r\n\r\n  //TODO: inject the Spotify service\r\n  constructor(private spotifyService:SpotifyService) { \r\n   }\r\n  \r\n  ngOnInit() {\r\n  }\r\n  /*TODO: create a function which gets the \"about me\" information from Spotify when the button in the view is clicked.\r\n  In that function, update the name, profile_pic, and profile_link fields */\r\n  getAboutMe(){ \r\n    this.spotifyService.aboutMe().then(data => {\r\n      this.name = data.name;\r\n      this.profile_pic = data.imageURL;\r\n      this.profile_link = data.spotifyProfile\r\n    })\r\n  }\r\n  \r\n}\r\n      \r\n      ","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvY2Fyb3VzZWwtY2FyZC9jYXJvdXNlbC1jYXJkLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<!--TODO: bind href to the appropriate local URL for the album/artist/song.-->\\r\\n<a [href] =\\\"resource.url\\\">\\r\\n<!--TODO bind src with the album/artist/song image URRL-->\\r\\n<img [src]=\\\"resource.imageURL\\\"  class=\\\"d-block w-100\\\">\\r\\n<div class=\\\"carousel-caption d-none d-md-block\\\">\\r\\n\\t<!--TODO: populate h5 with the album/artist/song name-->\\r\\n\\t<h5 [textContent]=\\\"resource.name\\\">???</h5>\\r\\n</div>\\r\\n</a>\"","import { Component, OnInit, Input } from '@angular/core';\r\nimport { ResourceData } from '../../data/resource-data';\r\n\r\n@Component({\r\n  selector: 'app-carousel-card',\r\n  templateUrl: './carousel-card.component.html',\r\n  styleUrls: ['./carousel-card.component.css']\r\n})\r\nexport class CarouselCardComponent implements OnInit {\r\n  @Input() resource:ResourceData;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \".carousel {\\r\\n\\twidth: 400px;\\r\\n}\\r\\n\\r\\napp-artist {\\r\\n\\tvertical-align: middle;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9jYXJvdXNlbC9jYXJvdXNlbC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0NBQ0MsYUFBYTtDQUNiOztBQUVEO0NBQ0MsdUJBQXVCO0NBQ3ZCIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9jYXJvdXNlbC9jYXJvdXNlbC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmNhcm91c2VsIHtcclxuXHR3aWR0aDogNDAwcHg7XHJcbn1cclxuXHJcbmFwcC1hcnRpc3Qge1xyXG5cdHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XHJcbn0iXX0= */\"","module.exports = \"<div *ngIf=\\\"resources\\\" id=\\\"{{carouselId}}\\\" class=\\\"carousel slide carousel-fade\\\" data-ride=\\\"carousel\\\" data-pause=\\\"false\\\" data-interval=\\\"3000\\\">\\r\\n  <div class=\\\"carousel-inner\\\">\\r\\n    <!--TODO: edit *ngFor to populate carousel with carousel-card components.-->\\r\\n    <!--carousel-card can bind a single resource as an Input.-->\\r\\n    <!--\\\"let first=first\\\" sets the \\\"first\\\" variable to be true for the first card in the carousel. The [ngClass] assigns the active property to it-->\\r\\n    <!--https://stackoverflow.com/questions/44288434/angular-2-ngfor-first-last-index-loop-->\\r\\n    <app-carousel-card *ngFor=\\\"let res of resources;let i = index;let first = first;\\\" class=\\\"carousel-item\\\" [resource] = \\\"res\\\" [ngClass]=\\\"{'active': first}\\\"></app-carousel-card>\\r\\n  </div>\\r\\n  <a class=\\\"carousel-control-prev\\\" href='#{{carouselId}}' role=\\\"button\\\" data-slide=\\\"prev\\\">\\r\\n    <span class=\\\"carousel-control-prev-icon\\\" aria-hidden=\\\"true\\\"></span>\\r\\n    <span class=\\\"sr-only\\\">Previous</span>\\r\\n  </a>\\r\\n  <a class=\\\"carousel-control-next\\\" href='#{{carouselId}}' role=\\\"button\\\" data-slide=\\\"next\\\">\\r\\n    <span class=\\\"carousel-control-next-icon\\\" aria-hidden=\\\"true\\\"></span>\\r\\n    <span class=\\\"sr-only\\\">Next</span>\\r\\n  </a>\\r\\n</div>\"","import { Component, OnInit, Input } from '@angular/core';\r\nimport { ResourceData } from '../../data/resource-data';\r\n\r\n@Component({\r\n  selector: 'app-carousel',\r\n  templateUrl: './carousel.component.html',\r\n  styleUrls: ['./carousel.component.css']\r\n})\r\nexport class CarouselComponent implements OnInit {\r\n\t@Input() carouselId:string;\r\n\t@Input() resources:ResourceData[];\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"input {\\r\\n\\tmargin: 10px;\\r\\n}\\r\\n\\r\\nselect {\\r\\n\\tmargin: 10px;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9zZWFyY2gvc2VhcmNoLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Q0FDQyxhQUFhO0NBQ2I7O0FBRUQ7Q0FDQyxhQUFhO0NBQ2IiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL3NlYXJjaC9zZWFyY2guY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbImlucHV0IHtcclxuXHRtYXJnaW46IDEwcHg7XHJcbn1cclxuXHJcbnNlbGVjdCB7XHJcblx0bWFyZ2luOiAxMHB4O1xyXG59Il19 */\"","module.exports = \"<h1>Search Spotify</h1>\\r\\n<!--TODO: bind input's model to searchString-->\\r\\n<input type=\\\"text\\\" [(ngModel)]=\\\"searchString\\\">\\r\\n<!--TODO: bind select's model to searchCategory-->\\r\\n<select [(ngModel)]=\\\"searchCategory\\\">\\r\\n\\t<option *ngFor=\\\"let cate of searchCategories;let i = index;\\\" [ngValue]=\\\"cate\\\">{{searchCategories[i]}}</option>\\r\\n\\t<!--TODO: loop over searchCategories to create dropdown options-->\\r\\n\\t<!--populate body and text value https://www.w3schools.com/tags/att_option_selected.asp-->\\r\\n</select>\\r\\n<!--TODO: Call search function when the button is clicked-->\\r\\n<button class=\\\"btn btn-light\\\" (click)=\\\"search()\\\">Search</button>\\r\\n<!--TODO: Display a carousel component if searching for an artist or album. Bind carousel's resources and give it a static carouselId.-->\\r\\n<app-carousel *ngIf = \\\"searchCategory == 'album' || searchCategory == 'artist'\\\" [resources] = \\\"resources\\\" [carouselId] = \\\"'myCarousel'\\\"></app-carousel>\\r\\n\\r\\n<!--TODO: Display a track-list component if searching for a track. Bind track-list's tracks.-->\\r\\n<app-track-list *ngIf = \\\"searchCategory == 'track'\\\" [tracks] = \\\"resources\\\"></app-track-list>\"","import { Component, OnInit } from '@angular/core';\r\nimport { SpotifyService } from '../../services/spotify.service';\r\nimport { ArtistData } from '../../data/artist-data';\r\nimport { AlbumData } from '../../data/album-data';\r\nimport { TrackData } from '../../data/track-data';\r\nimport { ResourceData } from '../../data/resource-data';\r\n\r\n@Component({\r\n  selector: 'app-search',\r\n  templateUrl: './search.component.html',\r\n  styleUrls: ['./search.component.css'],\r\n  providers: [ SpotifyService ]\r\n})\r\nexport class SearchComponent implements OnInit {\r\n  searchString:string;\r\n  searchCategory:string = 'track';\r\n  searchCategories:string[] = ['artist', 'album', 'track'];\r\n  resources:ResourceData[];\r\n\r\n  constructor(private spotifyService:SpotifyService) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  search() {\r\n    //TODO: call search function in spotifyService and parse response\r\n    this.spotifyService.searchFor(this.searchCategory, this.searchString).then(data => {\r\n      this.resources = data;\r\n    });\r\n    \r\n  }\r\n\r\n}\r\n","module.exports = \".progress {\\r\\n\\tmargin: 10px;\\r\\n\\theight: 20px;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy90aGVybW9tZXRlci90aGVybW9tZXRlci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0NBQ0MsYUFBYTtDQUNiLGFBQWE7Q0FDYiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvdGhlcm1vbWV0ZXIvdGhlcm1vbWV0ZXIuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5wcm9ncmVzcyB7XHJcblx0bWFyZ2luOiAxMHB4O1xyXG5cdGhlaWdodDogMjBweDtcclxufSJdfQ== */\"","module.exports = \"<div class=\\\"progress\\\">\\r\\n  <!--TODO: set style.background-color based on the audio feature's color and style.width via the audio feature's percent. Display feature name and percent.-->\\r\\n  <div class=\\\"progress-bar\\\"  role=\\\"progressbar\\\" [style.background-color]= \\\"Tfeature.color\\\" [style.width] =\\\"Tfeature.percentageString\\\" aria-valuemin=\\\"0\\\" aria-valuemax=\\\"100\\\">{{Tfeature.name}}: {{Tfeature.percentageString}}</div>\\r\\n</div>\"","import { Component, Input, OnInit } from '@angular/core';\r\nimport { TrackFeature } from '../../data/track-feature';\r\n\r\n@Component({\r\n  selector: 'app-thermometer',\r\n  templateUrl: './thermometer.component.html',\r\n  styleUrls: ['./thermometer.component.css']\r\n})\r\nexport class ThermometerComponent implements OnInit {\r\n  //TODO: define Input fields and bind them to the template.\r\n  @Input() Tfeature:TrackFeature;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"table {\\r\\n\\tcolor: var(--dark);\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy90cmFjay1saXN0L3RyYWNrLWxpc3QuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtDQUNDLG1CQUFtQjtDQUNuQiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvdHJhY2stbGlzdC90cmFjay1saXN0LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJ0YWJsZSB7XHJcblx0Y29sb3I6IHZhcigtLWRhcmspO1xyXG59Il19 */\"","module.exports = \"<table class=\\\"table table-sm table-light table-striped\\\" *ngIf=\\\"tracks\\\">\\r\\n\\t<thead>\\r\\n\\t\\t<tr>\\r\\n\\t\\t\\t<th scope=\\\"col\\\">#</th>\\r\\n\\t\\t\\t<th scope=\\\"col\\\">Track</th>\\r\\n\\t\\t\\t<th scope=\\\"col\\\">Duration</th>\\r\\n\\t\\t\\t<!--TODO: Use *ngIf to hide if hideArtist is true-->\\r\\n\\t\\t\\t<th *ngIf = \\\"!hideArtist\\\" scope=\\\"col\\\" >Primary Artist</th>\\r\\n\\t\\t\\t<!--TODO: Use *ngIf to hide if hideAlbum is true-->\\r\\n\\t\\t\\t<th scope=\\\"col\\\" *ngIf = \\\"!hideAlbum\\\">Album</th>\\r\\n\\t\\t</tr>\\r\\n\\t</thead>\\r\\n\\t<tbody>\\r\\n\\t\\t<!--TODO: Use *ngFor to loop over tracks-->\\r\\n\\t\\t<tr *ngFor=\\\"let track of tracks;let i = index;let isFirst = first;\\\">\\r\\n\\t\\t\\t<!--TODO: Populate with row index (start with 1!)-->\\r\\n\\t\\t\\t<td [textContent]=\\\"i\\\">???</td>\\r\\n\\t\\t\\t<td>\\r\\n\\t\\t\\t\\t<!--TODO: link to the endpoint for that track, display the track's name-->\\r\\n\\t\\t\\t\\t<a [href] =\\\"track.url\\\" [textContent]=\\\"track.name\\\">???</a>\\r\\n\\t\\t\\t</td>\\r\\n\\t\\t\\t<!--TODO: display the track's duration-->\\r\\n\\t\\t\\t<td [textContent]=\\\"track.durationStr\\\">???</td>\\r\\n\\t\\t\\t<!--TODO: Use *ngIf to hide if hideArtist is true; link to the first artist's endpoint and display the first artist's name-->\\r\\n\\t\\t\\t<td *ngIf = \\\"!hideArtist\\\"><a [href] =\\\"track.artists[0].url\\\" [textContent]=\\\"track.artists[0].name\\\"></a></td>\\r\\n\\t\\t\\t<!--TODO: Use *ngIf to hide if hideAlbum is true; link to the album's endpoint and display the album's name-->\\r\\n\\t\\t\\t<td *ngIf = \\\"!hideAlbum\\\"><a [href] =\\\"track.album.url\\\" [textContent]=\\\"track.album.name\\\"></a></td>\\r\\n\\t\\t</tr>\\r\\n\\t</tbody>\\r\\n</table>\\r\\n\"","import { Component, OnInit, Input } from '@angular/core';\r\nimport { TrackData } from '../../data/track-data';\r\n\r\n@Component({\r\n  selector: 'app-track-list',\r\n  templateUrl: './track-list.component.html',\r\n  styleUrls: ['./track-list.component.css']\r\n})\r\nexport class TrackListComponent implements OnInit {\r\n\t@Input() tracks:TrackData[];\r\n\t@Input() hideArtist:boolean = false;\r\n\t@Input() hideAlbum:boolean = false;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { ResourceData } from './resource-data';\r\nimport { ArtistData } from './artist-data';\r\n\r\nexport class AlbumData extends ResourceData {\r\n\tgenres:string[];\r\n\tartists:ArtistData[];\r\n\r\n\tconstructor(objectModel:{}) {\r\n\t\tsuper(objectModel);\r\n\t\tthis.category=\"album\";\r\n\r\n\t\tthis.genres = objectModel['genres'];\r\n\r\n\t\tthis.artists = objectModel['artists'].map((artist) => {\r\n\t\t\treturn new ArtistData(artist);\r\n\t\t});\r\n\t}\r\n}\r\n","import { ResourceData } from './resource-data';\r\n\r\nexport class ArtistData extends ResourceData {\r\n\tgenres:string[];\r\n\r\n\tconstructor(objectModel:{}) {\r\n\t\tsuper(objectModel);\r\n\t\tthis.category = 'artist';\r\n\t\tthis.genres = objectModel['genres'];\r\n\t}\r\n}\r\n","export class ProfileData {\r\n\tname:string;\r\n\tspotifyProfile:string;\r\n\timageURL:string;\r\n\r\n\tconstructor(objectModel:{}) {\r\n\t\tthis.name = objectModel['display_name'];\r\n\t\tthis.spotifyProfile = objectModel['external_urls']['spotify'];\r\n\t\tif(objectModel['images'].length > 0) {\r\n\t\t\tthis.imageURL = objectModel['images'][0].url;\r\n\t\t} else {\r\n\t\t\tthis.imageURL = '../../assets/unknown.jpg';\r\n\t\t}\r\n\t}\r\n}\r\n","export abstract class ResourceData {\r\n\tcategory:string = \"unknown\";\r\n\tname:string;\r\n\timageURL:string;\r\n\tid:string;\r\n\turl:string;\r\n\r\n\tconstructor(objectModel:{}) {\r\n\t\tthis.name = objectModel['name'];\r\n\t\tthis.id = objectModel['id'];\r\n\t\tif(objectModel['images'] && objectModel['images'].length > 0) {\r\n\t\t\tthis.imageURL = objectModel['images'][0].url;\r\n\t\t} else if(objectModel['album'] && objectModel['album']['images'] && objectModel['album']['images'].length > 0) {\r\n\t\t\tthis.imageURL = objectModel['album']['images'][0].url;\r\n\t\t} else {\r\n\t\t\tthis.imageURL = '../../assets/unknown.jpg';\r\n\t\t}\r\n\r\n\t\tif('spotify' in objectModel['external_urls']) {\r\n\t\t\tthis.url = objectModel['external_urls']['spotify'];\r\n\t\t}\r\n\t}\r\n}\r\n","import { ResourceData } from './resource-data';\r\nimport { ArtistData } from './artist-data';\r\nimport { AlbumData } from './album-data';\r\n\r\nexport class TrackData extends ResourceData {\r\n\talbum:AlbumData;\r\n\tartists:ArtistData[];\r\n\tduration_ms:number;\r\n\r\n\tconstructor(objectModel:{}) {\r\n\t\tsuper(objectModel);\r\n\t\tthis.category = \"track\";\r\n\r\n\t\tthis.artists = objectModel['artists'].map((artist) => {\r\n\t\t\treturn new ArtistData(artist);\r\n\t\t});\r\n\r\n\t\tif(objectModel['album']) {\r\n\t\t\tthis.album = new AlbumData(objectModel['album']);\r\n\t\t}\r\n\r\n\t\tthis.duration_ms = objectModel['duration_ms'];\r\n\t}\r\n\r\n\t//Return duration_ms in X:XX form (and drop ms component)\r\n\tget durationStr() {\r\n\t\tvar minutes:number = this.duration_ms / 60000; //60 sec/min * 100ms/sec\r\n\t\tvar seconds:number = (this.duration_ms) / 1000 % 60; // 100ms/sec, get remainder\r\n\t\treturn minutes.toFixed(0) + ':' + seconds.toFixed(0).padStart(2, '0');\r\n\t}\r\n\r\n\tget primaryArtist() {\r\n\t\treturn this.artists[0];\r\n\t}\r\n}\r\n","import * as chroma from 'chroma-js';\r\n\r\nexport class TrackFeature {\r\n\tstatic FeatureTypes = ['danceability', 'energy', 'speechiness', 'acousticness', 'instrumentalness', 'liveness', 'valence'];\r\n\r\n\tid:string;\r\n\tname:string;\r\n\tpercent:number;\r\n\r\n\tconstructor(feature:string, percent:number) {\r\n\t\tthis.name = feature;\r\n\t\tthis.percent = percent;\r\n\t}\r\n\r\n\tget percentageString() {\r\n\t\treturn (this.percent*100).toFixed() + '%';\r\n\t}\r\n\r\n\tget color() {\r\n\t\treturn chroma.mix('red', 'green', this.percent, 'hsl').hex();\r\n\t}\r\n}\r\n","module.exports = \"#albumImg {\\r\\n\\tmax-width: 100%;\\r\\n\\tmax-height: 100%;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvYWxidW0tcGFnZS9hbGJ1bS1wYWdlLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Q0FDQyxnQkFBZ0I7Q0FDaEIsaUJBQWlCO0NBQ2pCIiwiZmlsZSI6InNyYy9hcHAvcGFnZXMvYWxidW0tcGFnZS9hbGJ1bS1wYWdlLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIjYWxidW1JbWcge1xyXG5cdG1heC13aWR0aDogMTAwJTtcclxuXHRtYXgtaGVpZ2h0OiAxMDAlO1xyXG59Il19 */\"","module.exports = \"<div *ngIf=\\\"album\\\" class=\\\"row\\\">\\r\\n\\t<div class=\\\"col-6\\\">\\r\\n\\t\\t<!--TODO: populate with album name-->\\r\\n\\t\\t<h1>{{album.name}}</h1>\\r\\n\\t\\t<!--TODO: set src to album image URL-->\\r\\n\\t\\t<img id=\\\"albumImg\\\" src={{album.imageURL}}>\\r\\n\\t\\t<!--TODO: loop over album artists-->\\r\\n\\t\\t<p>\\r\\n\\t\\t\\t<!--TODO: link to artist page, display artist name-->\\r\\n\\t\\t\\tArtist: <a *ngFor=\\\"let artists of album.artists;\\\" href={{artists.url}}>{{artists.name}}</a>\\r\\n\\t\\t</p>\\r\\n\\t\\t<p>\\r\\n\\t\\t\\t<!--TODO: link to artist page on spotify, display artist name-->\\r\\n\\t\\t\\t<a class=\\\"btn btn-light\\\" role=\\\"button\\\" target=\\\"_blank\\\" href=\\\"https://open.spotify.com{{album.url}}\\\">Open {{album.name}} on Spotify</a>\\r\\n\\t\\t</p>\\r\\n\\t</div>\\r\\n\\t<div class=\\\"col-6\\\">\\r\\n\\t\\t<h3>Album Tracks</h3>\\r\\n\\t\\t<!--TODO: display the track list for the album. Hide the artist and album columns because they are redundant on this page.-->\\r\\n\\t\\t<app-track-list [tracks] = \\\"tracks\\\"></app-track-list>\\r\\n\\t</div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { ArtistData } from '../../data/artist-data';\r\nimport { TrackData } from '../../data/track-data';\r\nimport { AlbumData } from '../../data/album-data';\r\nimport { SpotifyService } from '../../services/spotify.service';\r\n\r\n@Component({\r\n  selector: 'app-album-page',\r\n  templateUrl: './album-page.component.html',\r\n  styleUrls: ['./album-page.component.css']\r\n})\r\nexport class AlbumPageComponent implements OnInit {\r\n\talbumId:string;\r\n\talbum:AlbumData;\r\n\ttracks:TrackData[];\r\n\r\n\r\n  constructor(private route: ActivatedRoute, private spotifyService:SpotifyService) { }\r\n\r\n  ngOnInit() {\r\n  \tthis.albumId = this.route.snapshot.paramMap.get('id');\r\n    //TODO: inject spotifyService and use it to get the album data and the tracks for the album\r\n    \r\n    this.spotifyService.getAlbum(this.albumId).then(data => {\r\n      this.albumId = data.id;\r\n      data.artists[0].url = data.artists[0].url.replace(\"https://open.spotify.com\", \"\");\r\n      this.album = data;\r\n    });\r\n    this.spotifyService.getTracksForAlbum(this.albumId).then(data => {\r\n      data.forEach((item) => {\r\n        item.album = this.album;\r\n        });\r\n      this.tracks = data;\r\n    });\r\n  }\r\n\r\n}\r\n","module.exports = \"#artistImg {\\r\\n\\tmax-width: 100%;\\r\\n\\tmax-height: 100%;\\r\\n}\\r\\n\\r\\napp-artist {\\r\\n\\tvertical-align: middle;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvYXJ0aXN0LXBhZ2UvYXJ0aXN0LXBhZ2UuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtDQUNDLGdCQUFnQjtDQUNoQixpQkFBaUI7Q0FDakI7O0FBRUQ7Q0FDQyx1QkFBdUI7Q0FDdkIiLCJmaWxlIjoic3JjL2FwcC9wYWdlcy9hcnRpc3QtcGFnZS9hcnRpc3QtcGFnZS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiI2FydGlzdEltZyB7XHJcblx0bWF4LXdpZHRoOiAxMDAlO1xyXG5cdG1heC1oZWlnaHQ6IDEwMCU7XHJcbn1cclxuXHJcbmFwcC1hcnRpc3Qge1xyXG5cdHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XHJcbn0iXX0= */\"","module.exports = \"<div *ngIf=\\\"artist\\\" class=\\\"row\\\">\\r\\n\\t<div class=\\\"col-6\\\">\\r\\n\\t\\t<!--TODO: populate with artist name-->\\r\\n\\t\\t<h1>{{artist.name}}</h1>\\r\\n\\t\\t<!--TODO: populate with artist image URL-->\\r\\n\\t\\t<img id=\\\"artistImg\\\" src={{artist.imageURL}}>\\r\\n\\t\\t<p>\\r\\n\\t\\t\\t<!--TODO: link to artist page on spotify, display artist name-->\\r\\n\\t\\t\\t<a class=\\\"btn btn-light\\\" role=\\\"button\\\" href={{artist.url}} target=\\\"_blank\\\">Open {{artist.name}} on Spotify</a>\\r\\n\\t\\t</p>\\r\\n\\t</div>\\r\\n\\t<div class=\\\"col-2\\\">\\r\\n\\t\\t<h3>Genres</h3>\\r\\n\\t\\t<ul>\\r\\n\\t\\t\\t<!--TODO: loop over artist's genres and display them-->\\r\\n\\t\\t\\t<li *ngFor=\\\"let genre of artist.genres;\\\">{{genre}}</li>\\r\\n\\t\\t</ul>\\r\\n\\t\\t<p>\\r\\n\\t\\t</p>\\r\\n\\t</div>\\r\\n\\t<div class=\\\"col-4\\\">\\r\\n\\t\\t<!--TODO: display artist name-->\\r\\n\\t\\t<h3>{{artist.name}}'s Top Tracks</h3>\\r\\n\\t\\t<!--TODO: display the track list for the album-->\\r\\n\\t\\t<app-track-list [tracks] = \\\"topTracks\\\"></app-track-list>\\r\\n\\t</div>\\r\\n</div>\\r\\n\\r\\n<div *ngIf=\\\"artist\\\" class=\\\"row\\\">\\r\\n\\t<div class=\\\"col-6\\\">\\r\\n\\t\\t<!--TODO: display artist name-->\\r\\n\\t\\t<h3>{{artist.name}}'s Albums</h3>\\r\\n\\t\\t<!--TODO: Display a carousel component for the artist's albums. Bind carousel's resources and give it a static carouselId.-->\\r\\n\\t\\t<app-carousel [resources] = \\\"albums\\\" [carouselId] = \\\"'wq'\\\"></app-carousel>\\r\\n\\t</div>\\r\\n\\t<div class=\\\"col-6\\\">\\r\\n\\t\\t<h3>Similar Artists</h3>\\r\\n\\t\\t<!--TODO: Display a carousel component for similar artists. Bind carousel's resources and give it a static carouselId.-->\\r\\n\\t\\t<app-carousel [resources] = \\\"relatedArtists\\\" [carouselId] = \\\"'vx'\\\"></app-carousel>\\r\\n\\t</div>\\r\\n\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { ArtistData } from '../../data/artist-data';\r\nimport { TrackData } from '../../data/track-data';\r\nimport { AlbumData } from '../../data/album-data';\r\nimport { SpotifyService } from '../../services/spotify.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-artist-page',\r\n  templateUrl: './artist-page.component.html',\r\n  styleUrls: ['./artist-page.component.css']\r\n})\r\nexport class ArtistPageComponent implements OnInit {\r\n\tartistId:string;\r\n\tartist:ArtistData;\r\n\trelatedArtists:ArtistData[];\r\n\ttopTracks:TrackData[];\r\n\talbums:AlbumData[];\r\n\r\n  constructor(private route: ActivatedRoute,private spotifyService:SpotifyService) { }\r\n\r\n  ngOnInit() {\r\n  \tthis.artistId = this.route.snapshot.paramMap.get('id');\r\n    //TODO: Inject the spotifyService and use it to get the artist data, related artists, top tracks for the artist, and the artist's albums\r\n    this.spotifyService.getArtist(this.artistId).then(data => {\r\n      this.artistId = data.id;\r\n      this.artist = data;\r\n    });\r\n    this.spotifyService.getRelatedArtists(this.artistId).then(data => {\r\n      this.relatedArtists = data;\r\n    });\r\n    this.spotifyService.getAlbumsForArtist(this.artistId).then(data => {\r\n      this.albums = data;\r\n    });\r\n    this.spotifyService.getTopTracksForArtist(this.artistId).then(data => {\r\n      this.topTracks = data;\r\n    });\r\n  }\r\n\r\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2hvbWUtcGFnZS9ob21lLXBhZ2UuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"row\\\">\\r\\n\\t<app-about class=\\\"col-6\\\"></app-about>\\r\\n\\t<app-search class=\\\"col-6\\\"></app-search>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-home-page',\r\n  templateUrl: './home-page.component.html',\r\n  styleUrls: ['./home-page.component.css']\r\n})\r\nexport class HomePageComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3RyYWNrLXBhZ2UvdHJhY2stcGFnZS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"row\\\">\\r\\n\\t<div *ngIf=\\\"track\\\" class=\\\"col-6\\\">\\r\\n\\t\\t<!--TODO: populate with track name-->\\r\\n\\t\\t<h1>{{track.name}}</h1>\\r\\n\\t\\t<p>\\r\\n\\t\\t\\t<!--TODO: link to album page, display album name-->\\r\\n\\t\\t\\tTrack on <a href={{track.album.url}}>{{track.album.name}}</a>\\r\\n\\t\\t</p>\\r\\n\\t\\t<div>\\r\\n\\t\\t\\t<!--TODO: loop over album's artists-->\\r\\n\\t\\t\\t<p>\\r\\n\\t\\t\\t\\t<!--TODO: link to artist page, display artist name-->\\r\\n\\t\\t\\t\\tArtist: <a href={{track.artists[0].url}}>{{track.artists[0].name}}</a>\\r\\n\\t\\t\\t</p>\\r\\n\\t\\t</div>\\r\\n\\t\\t<p>\\r\\n\\t\\t\\t<!--TODO: populate with track duration-->\\r\\n\\t\\t\\tDuration: {{track.durationStr}}\\r\\n\\t\\t</p>\\r\\n\\t\\t<p>\\r\\n\\t\\t\\t<!--TODO: link to track page on spotify, display track name-->\\r\\n\\t\\t\\t<a class=\\\"btn btn-light\\\" role=\\\"button\\\" target=\\\"_blank\\\" href={{track.url}}>Open {{track.name}} on Spotify</a>\\r\\n\\t\\t</p>\\r\\n\\t</div>\\r\\n\\t<div *ngIf=\\\"audioFeatures\\\" class=\\\"col-6\\\">\\r\\n\\t\\t<!--TODO: loop over types of features and create a thermometer component for each-->\\r\\n\\t\\t<app-thermometer *ngFor=\\\"let feat of audioFeatures;let i = index;\\\" [Tfeature] = \\\"feat\\\"></app-thermometer>\\r\\n\\t</div>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { ArtistData } from '../../data/artist-data';\r\nimport { TrackData } from '../../data/track-data';\r\nimport { AlbumData } from '../../data/album-data';\r\nimport { TrackFeature } from '../../data/track-feature';\r\nimport { SpotifyService } from '../../services/spotify.service';\r\n\r\n@Component({\r\n  selector: 'app-track-page',\r\n  templateUrl: './track-page.component.html',\r\n  styleUrls: ['./track-page.component.css']\r\n})\r\nexport class TrackPageComponent implements OnInit {\r\n\ttrackId:string;\r\n\ttrack:TrackData;\r\n  audioFeatures:TrackFeature[];\r\n\r\n  constructor(private route: ActivatedRoute, private spotifyService:SpotifyService) { }\r\n\r\n  ngOnInit() {\r\n  \tthis.trackId = this.route.snapshot.paramMap.get('id');\r\n    //TODO: Inject the spotifyService and use it to get the track data and it's audio features\r\n    this.spotifyService.getTrack(this.trackId).then(data => {\r\n      this.trackId = data.id;\r\n      data.artists[0].url = data.artists[0].url.replace(\"https://open.spotify.com\", \"\");\r\n      data.album.url = data.album.url.replace(\"https://open.spotify.com\", \"\");\r\n      this.track = data;\r\n    });\r\n    this.spotifyService.getAudioFeaturesForTrack(this.trackId).then(data => {\r\n      this.audioFeatures = data;\r\n    });\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { ArtistData } from '../data/artist-data';\r\nimport { AlbumData } from '../data/album-data';\r\nimport { TrackData } from '../data/track-data';\r\nimport { ResourceData } from '../data/resource-data';\r\nimport { ProfileData } from '../data/profile-data';\r\nimport { TrackFeature } from '../data/track-feature';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SpotifyService {\r\n\t//expressBaseUrl:string = 'http://localhost:8888';\r\n    expressBaseUrl:string = '';\r\n    \r\n  constructor(private http:HttpClient) { }\r\n\r\n  private sendRequestToExpress(endpoint:string):Promise<any> {\r\n    //TODO: use the injected http Service to make a get request to the Express endpoint and return the response.\r\n    //the http service works similarly to fetch(). It may be useful to call .toPromise() on any responses.\r\n    //update the return to instead return a Promise with the data from the Express server\r\n    let promise = new Promise((resolve,reject) => {\r\n      let url = this.expressBaseUrl+endpoint;\r\n      this.http.get(url)\r\n        .toPromise()\r\n        .then(\r\n          res => { \r\n            resolve(res);\r\n          }\r\n        )\r\n    } );\r\n    \r\n    return promise;\r\n  }\r\n\r\n  aboutMe():Promise<ProfileData> {\r\n    //This line is sending a request to express, which returns a promise with some data. We're then parsing the data \r\n    return this.sendRequestToExpress('/me').then((data) => {\r\n      return new ProfileData(data);\r\n    });\r\n  }\r\n  \r\n  searchFor(category:string, resource:string):Promise<ResourceData[]> {\r\n    //TODO: identify the search endpoint in the express webserver (routes/index.js) and send the request to express.\r\n    //Make sure you're encoding the resource with encodeURIComponent().\r\n    //Depending on the category (artist, track, album), return an array of that type of data.\r\n    //JavaScript's \"map\" function might be useful for this, but there are other ways of building the array.\r\n    if (category == 'album')\r\n    return this.sendRequestToExpress('/search/'+category+'/'+resource).then((data) => {\r\n      let URI = encodeURIComponent(data);\r\n      let resources = new Array();\r\n      data['albums']['items'].forEach((item) => {\r\n      let Album = new AlbumData(item);\r\n      Album.url = Album.url.replace(\"https://open.spotify.com\", \"\")\r\n      resources.push(Album);\r\n      });\r\n      return resources;\r\n    });\r\n    if (category == 'artist')\r\n    return this.sendRequestToExpress('/search/'+category+'/'+resource).then((data) => {\r\n      let URI = encodeURIComponent(data);\r\n      let resources = new Array();\r\n      data['artists']['items'].forEach((item) => {\r\n      let Artist = new ArtistData(item);\r\n      Artist.url = Artist.url.replace(\"https://open.spotify.com\", \"\")\r\n      resources.push(Artist);\r\n      });\r\n      return resources;\r\n    });\r\n    if (category == 'track')\r\n    return this.sendRequestToExpress('/search/'+category+'/'+resource).then((data) => {\r\n      let URI = encodeURIComponent(data);\r\n      let resources = new Array();\r\n      data['tracks']['items'].forEach((item) => {\r\n      let Track = new TrackData(item);\r\n      Track.url = Track.url.replace(\"https://open.spotify.com\", \"\");\r\n      Track.album.url = Track.album.url.replace(\"https://open.spotify.com\", \"\");\r\n      Track.artists[0].url = Track.artists[0].url.replace(\"https://open.spotify.com\", \"\");\r\n      resources.push(Track);\r\n      });\r\n      return resources;\r\n    });\r\n  }\r\n  \r\n  getArtist(artistId:string):Promise<ArtistData> {\r\n    //TODO: use the artist endpoint to make a request to express.\r\n    //Again, you may need to encode the artistId.\r\n    return this.sendRequestToExpress('/artist/'+artistId).then((data) => {\r\n      let art = new ArtistData(data);\r\n      return art;\r\n    });\r\n  }\r\n\r\n  getRelatedArtists(artistId:string):Promise<ArtistData[]> {\r\n    //TODO: use the related artist endpoint to make a request to express and return an array of artist data.\r\n    return this.sendRequestToExpress('/artist-related-artists/'+artistId).then((data) => {\r\n      let resources = new Array();\r\n      data['artists'].forEach((item) => {\r\n      let Artist = new ArtistData(item);\r\n      Artist.url = Artist.url.replace(\"https://open.spotify.com\", \"\");\r\n      resources.push(Artist);\r\n      });\r\n      return resources;\r\n    });\r\n    \r\n  }\r\n\r\n  getTopTracksForArtist(artistId:string):Promise<TrackData[]> {\r\n    //TODO: use the top tracks endpoint to make a request to express.\r\n    return this.sendRequestToExpress('/artist-top-tracks/'+artistId).then((data) => {\r\n      let resources = new Array();\r\n      data['tracks'].forEach((item) => {\r\n      let Track = new TrackData(item);\r\n      Track.album.url = Track.album.url.replace(\"https://open.spotify.com\", \"\");\r\n      Track.artists[0].url = Track.artists[0].url.replace(\"https://open.spotify.com\", \"\");\r\n      Track.url = Track.url.replace(\"https://open.spotify.com\", \"\");\r\n      resources.push(Track);\r\n      });\r\n      return resources;\r\n    });\r\n  }\r\n\r\n  getAlbumsForArtist(artistId:string):Promise<AlbumData[]> {\r\n    //TODO: use the albums for an artist endpoint to make a request to express.\r\n    return this.sendRequestToExpress('/artist-albums/'+artistId).then((data) => {\r\n      let resources = new Array();\r\n      data['items'].forEach((item) => {\r\n      let Album = new AlbumData(item);\r\n      Album.url = Album.url.replace(\"https://open.spotify.com\", \"\");\r\n      resources.push(Album);\r\n      });\r\n      return resources;\r\n    });\r\n  }\r\n\r\n  getAlbum(albumId:string):Promise<AlbumData> {\r\n    //TODO: use the album endpoint to make a request to express.\r\n    return this.sendRequestToExpress('/album/'+albumId).then((data) => {\r\n      let Album = new AlbumData(data);\r\n      Album.artists[0].url = Album.artists[0].url.replace(\"https://open.spotify.com\", \"\");\r\n      Album.url = Album.url.replace(\"https://open.spotify.com\", \"\");\r\n      return Album;\r\n    });\r\n  }\r\n\r\n  getTracksForAlbum(albumId:string):Promise<TrackData[]> {\r\n    //TODO: use the tracks for album endpoint to make a request to express.\r\n    return this.sendRequestToExpress('/album-tracks/'+albumId).then((data) => {\r\n      let resources = new Array();\r\n      data['items'].forEach((item) => {\r\n      let Track = new TrackData(item);\r\n      Track.artists[0].url = Track.artists[0].url.replace(\"https://open.spotify.com\", \"\");\r\n      Track.url = Track.url.replace(\"https://open.spotify.com\", \"\");\r\n      resources.push(Track);\r\n      });\r\n      return resources;\r\n    });\r\n  }\r\n\r\n  getTrack(trackId:string):Promise<TrackData> {\r\n    //TODO: use the track endpoint to make a request to express.\r\n    return this.sendRequestToExpress('/track/'+trackId).then((data) => {\r\n      let Track = new TrackData(data);\r\n      return Track;\r\n    });\r\n  }\r\n\r\n  getAudioFeaturesForTrack(trackId:string):Promise<TrackFeature[]> {\r\n    //TODO: use the audio features for track endpoint to make a request to express.\r\n    return this.sendRequestToExpress('/track-audio-features/'+trackId).then((data) => {\r\n      let resources = new Array();\r\n      let danceability = new TrackFeature('danceability',data.danceability);\r\n      danceability.id = data.id;\r\n      resources.push(danceability);\r\n\r\n      let energy = new TrackFeature('energy',data.energy);\r\n      energy.id = data.id;\r\n      resources.push(energy);\r\n      \r\n      let speechiness = new TrackFeature('speechiness',data.speechiness);\r\n      speechiness.id = data.id;\r\n      resources.push(speechiness);\r\n\r\n      let acousticness = new TrackFeature('acousticness',data.acousticness);\r\n      acousticness.id = data.id;\r\n      resources.push(acousticness);\r\n\r\n      let instrumentalness = new TrackFeature('instrumentalness',data.instrumentalness);\r\n      instrumentalness.id = data.id;\r\n      resources.push(instrumentalness);\r\n\r\n      let liveness = new TrackFeature('liveness',data.liveness);\r\n      liveness.id = data.id;\r\n      resources.push(liveness);\r\n\r\n      let valence = new TrackFeature('valence',data.valence);\r\n      valence.id = data.id;\r\n      resources.push(valence);\r\n      return resources;\r\n    });\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":""}